name: "Ruby on Rails CI"
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.2', '3.3'] # Use at least 3.1 or higher
        rails-version: ['7.0', '7.1', '7.2']
    env:
      RAILS_ENV: test
      DATABASE_URL: "sqlite3:db/test.sqlite3"
      BUNDLE_WITHOUT: development:production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Set up database
        run: |
          mkdir -p db
          touch db/test.sqlite3
          bundle exec rails db:migrate
      - name: Run tests
        run: bundle exec rspec # Or bundle exec rails test
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.2']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install linters
        run: |
          gem install bundler-audit brakeman rubocop
      - name: Security audit dependencies
        run: bundle exec bundler-audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel --fail-level=warning